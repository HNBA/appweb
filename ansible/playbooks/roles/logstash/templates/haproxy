grok {
    match => { "message" => [ #https://www.haproxy.org/download/1.2/doc/haproxy-en.txt Tq/Tw/Tc/Tr/Tt
       "(?<date>.*?:[0-9]+) (?<server>.*?) haproxy\[(?<pid>[0-9]+)\]: (?<socket>.*?) \[.*?\] .*? (?<hatype>.*?)\/.*? (?<resptq>-?[0-9]+?)\/(?<resptw>-?[0-9]+?)\/(?<resptc>-?[0-9]+?)\/(?<resptr>-?[0-9]+?)\/(?<resptt>-?[0-9]+?) (?<httpResponse>[0-9]+?) (?<httpContentSize>[0-9]+?) .*\"(?<request>.*?)\"",
       "(?<date>.*?:[0-9]+) (?<server>.*?) haproxy\[(?<pid>[0-9]+)\]: proxy (?<hatype>marathon_api) (?<info>.*)",
       "(?<date>.*?:[0-9]+) (?<server>.*?) haproxy\[(?<pid>[0-9]+)\]: Server (?<hatype>marathon_api)\/(?<server>.*?) is (?<status>.*?), reason: (?<reason>.*?), info: (?<info>.*)" 
       ]}
 }

 grok {
    match => {
        "request" => [
           "(?<rest_command>(GET|POST|HEAD|PUT|DELETE)) (?<path>.*?) HTTP\/(?<http_version>.*)"
         ]
       }
  }
  ###  if matched request then remove field request

  if [hatype] == "marathon_api" {
    mutate {
      add_field => {"test" => "marathon_api"}
     }
       grok {
         #/v2/apps/%2Fphenix%2Fpipeline%2Ftransaction%2Funknown-barcode-persister
         #/v2/apps//phenix/pipeline/stocks/stocks-normalizer
         #/v2/apps/phenix/plateform/chronos
         #/v2/apps//phenix/pipeline/transaction/tlogs-normalizer
         #/v2/apps//phenix/pipeline/transaction/online-transactions-persister

         match => {
          "path" => [
             "\/v(?<api_version>.*?)\/apps\/%2F(?<phenix>phenix)%2Fpipeline%2Ftransaction%2F(?<service>.*)",
             "\/v(?<api_version>.*?)\/apps\/(\/)?phenix\/(?<phenix>pipeline)\/.*?\/(?<service>.*)",
             "\/v(?<api_version>.*?)\/apps\/(\/)?phenix\/(?<phenix>plateform)\/(?<service>.*)"
           ]
         }
       }
  } else if [hatype] == "schema_manager" {
     mutate {
      add_field => {"test" => "HaPhenix"}
     }
       grok {
         # /phenix/api/v1.0/metadata/record/com.carrefour.phenix.sales.financial.v1.TrxLine
         # /phenix/api/v1.0/metadata/schema/a9591fb6-dd6b-3632-0000-000000000000
         match => {
          "path" => [
             "\/phenix\/api\/v(?<api_version>.*?)\/metadata\/(?<meta>.*?)\/(?<data>.*)"
           ]
         }
       }
  } else if [hatype] == "gateway_http" {
       grok {
         match => { #/phenix/api/v1.1/gateway/pipeline/subject/xlog/entity/0050/b6c40be4-d70f-4c60-8f48-3d5a0bc18e7b
          "path" => [
             "\/phenix\/api\/v(?<api_version>.*?)\/gateway\/pipeline\/subject\/(?<subject>.*?)\/entity\/(?<entity>.*?)\/(?<token>.*)"
           ]
         }
       }
  } else if [hatype] == "getTransactionJe11" {
       grok {
         match => { #/api/v1.1/sales/trx/je/store/3020339808500
          "path" => [
             "\/api\/(?<api_version>.*?)\/sales\/trx\/je\/store\/(?<store>.*)"
           ]
         }
       }
  } else if [hatype] == "getStockStore11" {
       grok {
         match => { #/api/v1.1/stock/levels/store/3020339800600/product/0000001639505?from=20161211&to=20161220
          "path" => [
             "\/api\/(?<api_version>.*?)\/stock\/(?<stock>.*?)\/store\/(?<store>.*?)\/product\/(?<product>.*?)\?from=(?<from_date>........)\&to=(?<to_date>........)",
              "\/api\/(?<api_version>.*?)\/stock\/(?<stock>.*?)\/store\/(?<store>.*?)\/product\/(?<product>.*)"
           ]
         }
       }
  } else if [hatype] == "game" {
       grok {
         match => { #/kpi/next-promo-kpi/2017630301/store/3020470140000/item/3328009
          "path" => [
             "\/kpi\/next-promo-kpi\/(?<next-promo-kpi>.*?)\/store\/(?<store>.*?)\/item\/(?<item>.*)",
             "\/kpi\/next-promo-stk\/(?<next-promo-stk>.*?)\/store\/(?<store>.*?)\/item\/(?<item>.*)"
           ]
         }
       }
  }
