    grok {
      match => { "message" => "(?<date>.*) \[myid:(?<myid>[0-9]+)\] - (?<logtype>.{5}) \[(?<class>.*?):(?<addr>.*?)@(?<server>.*?)\] - (?<logmsg>.*)" }
    }
    grok {
      match => { 
        "logmsg" => [
          "(?<zkaction>Accepted socket connection) from /%{IP:ip}:(?<port>[0-9]+)",
          "(?<zkaction>caught end of stream exception)",
          "(?<zkaction>Client attempting to establish new session) at /%{IP:ip}:(?<port>[0-9]+)",
          "(?<zkaction>Client attempting to renew session) (?<sessionid>[^ ]*) at /%{IP:ip}:(?<port>[0-9]+)",
          "(?<zkaction>Closed socket connection for client) /%{IP:ip}:(?<port>[0-9]+) which had sessionid (?<session>[^ ]*)",
          "(?<zkaction>Connection request from old client) /%{IP:ip}:(?<port>[0-9]+); will be dropped if server is in r-o mode",
          "(?<zkaction>Creating new log file): (?<zklog>.*)",
          "(?<zkaction>Established session) (?<session>[^ ]*) with negotiated timeout (?<timeout>[0-9]+) for client /%{IP:ip}:(?<port>[0-9]+)",
          "(?<zkaction>Invalid session) (?<session>[^ ]*) for client /%{IP:ip}:(?<port>[0-9]+), probably expired",
          "(?<zkaction>Processing mntr command) from /%{IP:ip}:(?<port>[0-9]+)",
          "(?<action>Purge task completed).",
          "(?<zkaction>Purge task started).",
          "(?<zkaction>Revalidating client): (?<zkclient>.*)",
          "(?<zkaction>Snapshotting): (?<zkclient>[^ ]*) to (?<zksnapshot>.*)",
          "(?<zkaction>Unexpected Exception):",
          "(?<zkaction>Processed session termination) for sessionid: (?<session>[^ ]+)",
          "(?<zkaction>Closed socket connection for client) /%{IP:ip}:(?<port>[0-9]+) (no session established for client)",
          "(?<zkexception>caught end of stream exception)"
         ]
      }
    }

