import {ReplaySubject} from 'rxjs/Rx';
import {Injectable} from '@angular/core';
import * as channel from '../../src/channel.js';

let ch = new channel();
@Injectable()
export class SineWaveDataService {

 
  observableSineWave() : Array<number>{
      let subject = Array<number>(1);
      ch.send({service:'logs'});
      ch.receive(function (msg) {
      //setTimeout(function(){console.log(msg.doc.value);

      //subject.push(msg.doc.value);}, 3000);

        subject.push('
        subject.push(msg.doc.value);

        });
     return subject;
  }
 observableSineWaveChart() : Array<number>{
      let subjectChart = Array<number>(1);
      ch.send({service:'chart'});
      ch.receive(function (msg) {
      //setTimeout(function(){console.log(msg.doc.value);
      //subject.push(msg.doc.value);}, 3000);
        subjectChart.push(msg.doc.value);
        });
     return subjectChart;
  }

  observableSineWaveSsh() : Array<string>{
      let subjectSsh = Array<string>(1);
      ch.send({service:'log'});
      ch.receive(function (msg) {
        subjectSsh.push(msg.doc.status);
        subjectSsh.push(msg.doc.user);
//        subjectSsh.push(msg.doc.logdate);
//        subjectSsh.push(msg.doc.host); 
       });
     return subjectSsh;
  }

}

